/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as UnauthenticatedImport } from "./routes/_unauthenticated";
import { Route as AuthenticatedImport } from "./routes/_authenticated";
import { Route as UnauthenticatedIndexImport } from "./routes/_unauthenticated/index";
import { Route as UnauthenticatedGetStartedIndexImport } from "./routes/_unauthenticated/get-started/index";
import { Route as AuthenticatedSignOutIndexImport } from "./routes/_authenticated/sign-out/index";
import { Route as AuthenticatedAppIndexImport } from "./routes/_authenticated/app/index";

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: "/_unauthenticated",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any);

const UnauthenticatedIndexRoute = UnauthenticatedIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => UnauthenticatedRoute,
} as any);

const UnauthenticatedGetStartedIndexRoute =
  UnauthenticatedGetStartedIndexImport.update({
    id: "/get-started/",
    path: "/get-started/",
    getParentRoute: () => UnauthenticatedRoute,
  } as any);

const AuthenticatedSignOutIndexRoute = AuthenticatedSignOutIndexImport.update({
  id: "/sign-out/",
  path: "/sign-out/",
  getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedAppIndexRoute = AuthenticatedAppIndexImport.update({
  id: "/app/",
  path: "/app/",
  getParentRoute: () => AuthenticatedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_authenticated": {
      id: "/_authenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    "/_unauthenticated": {
      id: "/_unauthenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof UnauthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    "/_unauthenticated/": {
      id: "/_unauthenticated/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof UnauthenticatedIndexImport;
      parentRoute: typeof UnauthenticatedImport;
    };
    "/_authenticated/app/": {
      id: "/_authenticated/app/";
      path: "/app";
      fullPath: "/app";
      preLoaderRoute: typeof AuthenticatedAppIndexImport;
      parentRoute: typeof AuthenticatedImport;
    };
    "/_authenticated/sign-out/": {
      id: "/_authenticated/sign-out/";
      path: "/sign-out";
      fullPath: "/sign-out";
      preLoaderRoute: typeof AuthenticatedSignOutIndexImport;
      parentRoute: typeof AuthenticatedImport;
    };
    "/_unauthenticated/get-started/": {
      id: "/_unauthenticated/get-started/";
      path: "/get-started";
      fullPath: "/get-started";
      preLoaderRoute: typeof UnauthenticatedGetStartedIndexImport;
      parentRoute: typeof UnauthenticatedImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAppIndexRoute: typeof AuthenticatedAppIndexRoute;
  AuthenticatedSignOutIndexRoute: typeof AuthenticatedSignOutIndexRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAppIndexRoute: AuthenticatedAppIndexRoute,
  AuthenticatedSignOutIndexRoute: AuthenticatedSignOutIndexRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
);

interface UnauthenticatedRouteChildren {
  UnauthenticatedIndexRoute: typeof UnauthenticatedIndexRoute;
  UnauthenticatedGetStartedIndexRoute: typeof UnauthenticatedGetStartedIndexRoute;
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedIndexRoute: UnauthenticatedIndexRoute,
  UnauthenticatedGetStartedIndexRoute: UnauthenticatedGetStartedIndexRoute,
};

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
  "": typeof UnauthenticatedRouteWithChildren;
  "/": typeof UnauthenticatedIndexRoute;
  "/app": typeof AuthenticatedAppIndexRoute;
  "/sign-out": typeof AuthenticatedSignOutIndexRoute;
  "/get-started": typeof UnauthenticatedGetStartedIndexRoute;
}

export interface FileRoutesByTo {
  "": typeof AuthenticatedRouteWithChildren;
  "/": typeof UnauthenticatedIndexRoute;
  "/app": typeof AuthenticatedAppIndexRoute;
  "/sign-out": typeof AuthenticatedSignOutIndexRoute;
  "/get-started": typeof UnauthenticatedGetStartedIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_authenticated": typeof AuthenticatedRouteWithChildren;
  "/_unauthenticated": typeof UnauthenticatedRouteWithChildren;
  "/_unauthenticated/": typeof UnauthenticatedIndexRoute;
  "/_authenticated/app/": typeof AuthenticatedAppIndexRoute;
  "/_authenticated/sign-out/": typeof AuthenticatedSignOutIndexRoute;
  "/_unauthenticated/get-started/": typeof UnauthenticatedGetStartedIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "" | "/" | "/app" | "/sign-out" | "/get-started";
  fileRoutesByTo: FileRoutesByTo;
  to: "" | "/" | "/app" | "/sign-out" | "/get-started";
  id:
    | "__root__"
    | "/_authenticated"
    | "/_unauthenticated"
    | "/_unauthenticated/"
    | "/_authenticated/app/"
    | "/_authenticated/sign-out/"
    | "/_unauthenticated/get-started/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/app/",
        "/_authenticated/sign-out/"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/",
        "/_unauthenticated/get-started/"
      ]
    },
    "/_unauthenticated/": {
      "filePath": "_unauthenticated/index.tsx",
      "parent": "/_unauthenticated"
    },
    "/_authenticated/app/": {
      "filePath": "_authenticated/app/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sign-out/": {
      "filePath": "_authenticated/sign-out/index.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/get-started/": {
      "filePath": "_unauthenticated/get-started/index.tsx",
      "parent": "/_unauthenticated"
    }
  }
}
ROUTE_MANIFEST_END */
